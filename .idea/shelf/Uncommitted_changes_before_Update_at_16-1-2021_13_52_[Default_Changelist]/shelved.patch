Index: Dashboard.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># steam project dashboard - verona kragten\r\n\r\n#TODO: Deze regel overal aanpassen sorted_dict = sorted(json_to_dict(data_location), key=lambda k: k['price'])  # sort list of dicts\r\n#TODO: Kijken naar zoeken met een filter\r\n\r\nfrom tkinter import *\r\nimport webbrowser\r\nimport json\r\nimport re\r\nfrom tkinter import ttk\r\nimport matplotlib\r\nmatplotlib.use('Agg')\r\nimport matplotlib.pyplot as plt\r\nfrom matplotlib.backends.backend_tkagg import (FigureCanvasTkAgg, NavigationToolbar2Tk)\r\nfrom tkcolorpicker import askcolor\r\nimport threading\r\nimport Pyro5.api\r\nimport time\r\nfrom tkinter import tix\r\nfrom tkinter.constants import *\r\nfrom PIL import ImageTk,Image\r\nimport requests\r\nimport pandas as pd\r\nfrom tkinter import messagebox\r\n\r\n\r\n\r\n# -- globals\r\nglobal pricefilterframe\r\nglobal case_sensitive\r\ncase_sensitive = True\r\nglobal sorting\r\nglobal games_from_list\r\nglobal sensordisplay\r\nsensordisplay = \"neopixel\"\r\n#Voor de verbinding met de server\r\ncon = \"PYRO:steam.functions@192.168.192.24:9090\"\r\n#Locatie van steam.json voor als de API niet werkt\r\ndata_location = \"steam.json\"\r\n\r\n\r\n\r\n# -- functions\r\ndef openReadme():\r\n    webbrowser.open('https://github.com/Dave-The-IT-Guy/HUProjectB/blob/main/README.md')\r\n\r\ndef listInsert(list):\r\n    for item in list:\r\n        gameslist.insert(END, item)\r\n\r\n\r\ndef json_to_dict(location):\r\n    #Open de json file en zet alles in een dictonairy\r\n    with open(location) as json_file:\r\n        steamdata = json.load(json_file)\r\n    return steamdata\r\n\r\ndef select(dict, selection):\r\n    # Maak een lege lijst aan voor de namen\r\n    result = []\r\n    # Loop door de dictionaries in de lijst\r\n    for i in dict:\r\n        # Haal de waarde van de name key uit de dict\r\n        i = i[selection]\r\n        # Maak er een string van\r\n        i = str(i)\r\n        # Haal met regex de meeste speciale karakters eruit\r\n        i = re.sub('[^A-Za-z0-9$()\\&\\+\\'\\:\\w\\-\\s\\.]+', '', i)  # [^A-Za-z0-9]\r\n\r\n        # Haal alle onnodige spaties weg\r\n        i = \" \".join(i.split())\r\n        # Haal wat extra rotzooi uit de string\r\n        (i).replace('()', '')\r\n        i.strip()\r\n\r\n        # Als een string met ' begint en eindigd verwijder deze dan\r\n        if i.startswith('\\'') == True and i.endswith('\\'') == True:\r\n            i = i[1:(len(i) - 1)]\r\n\r\n        # Als de string niet false is voeg hem toe aan de lijst (strings kunnen false zijn als ze bijv. leeg zijn)\r\n        if i:\r\n            result.append(i)\r\n    return result\r\n\r\n\r\n#Source: https://www.geeksforgeeks.org/merge-sort/\r\ndef sort(lst):\r\n\r\n    if len(lst) > 1:\r\n\r\n        # Vind het midden van de lijst\r\n        center = len(lst) // 2\r\n\r\n        # Bepaal de linkerkant van de lijst\r\n        left = lst[:center]\r\n\r\n        # Bepaal de rechterkant van de lijst\r\n        right = lst[center:]\r\n\r\n        # Sorteerd de eerste helft van de lijst\r\n        sort(left)\r\n\r\n        # Sorteerd de tweede helft van de lijst\r\n        sort(right)\r\n\r\n        # Variabelen die gebruit worden om te tellen\r\n        i = j = k = 0\r\n\r\n        # Kopieeert de data in 2 tijdelijke lijsten\r\n        while i < len(left) and j < len(right):\r\n            if left[i] < right[j]:\r\n                lst[k] = left[i]\r\n                i += 1\r\n            else:\r\n                lst[k] = right[j]\r\n                j += 1\r\n            k += 1\r\n\r\n        # Checkt voor overgebleven elementen als die er zijn (links)\r\n        while i < len(left):\r\n            lst[k] = left[i]\r\n            i += 1\r\n            k += 1\r\n\r\n        # Checkt voor overgebleven elementen als die er zijn (rechts)\r\n        while j < len(right):\r\n            lst[k] = right[j]\r\n            j += 1\r\n            k += 1\r\n    return lst\r\n\r\n\r\ndef sort_json(location, sort_by):\r\n    # Maak van de json een dict\r\n    dict = json_to_dict(location)\r\n\r\n    # Maakt een lijst van alle data die bij de gekozen sleutel hoort\r\n    lst = select(dict, sort_by)\r\n\r\n    # Returnt een gesorteerde variant van de lijst\r\n    return sort(lst)\r\n\r\n\r\ndef get_request(url, parameters=None):\r\n\r\n    try:\r\n        response = requests.get(url=url, params=parameters)\r\n    except:\r\n        time.sleep(2)\r\n        # recusively try again\r\n        return get_request(url, parameters)\r\n\r\n    if response:\r\n        return response.json()\r\n    else:\r\n        # response is none usually means too many requests. Wait and try again\r\n        time.sleep(2)\r\n        return get_request(url, parameters)\r\n\r\n\r\ndef collectInfo(**kwargs):\r\n\r\n    game = kwargs.get('gameID', \"all\")\r\n    genre = kwargs.get('genre', None)\r\n\r\n    if genre != None:\r\n        print(\"soem\")\r\n        url = \"https://steamspy.com/api.php?request=genre&genre=\" + genre.replace(\" \", \"+\")\r\n    elif game == \"all\":\r\n        print(\"all\")\r\n        url = \"https://steamspy.com/api.php?request=all\"\r\n    else:\r\n        url = \"https://steamspy.com/api.php?request=appdetails&appid=\" + str(game)\r\n\r\n    # request 'all' from steam spy and parse into dataframe\r\n    json_data = get_request(url)\r\n\r\n    if game == None or game == \"all\":\r\n        json_data = pd.DataFrame.from_dict(json_data, orient='index')\r\n\r\n    return (json_data)\r\n\r\n\r\ndef showgraph(appID, *rating):\r\n    if appID != 0:\r\n        app = collectInfo(gameID = appID)\r\n\r\n        positive = app['positive']\r\n        negative = app['negative']\r\n        sizes = [positive, negative]\r\n    #Als de api niet werkt kan er op deze manier toch een grafiek getoont worden\r\n    else:\r\n        sizes = rating[0]\r\n\r\n    ax1.clear()\r\n    ax1.pie(sizes, explode=[0.1, 0], labels=[\"Positief\", \"Negatief\"], autopct='%1.0f%%', shadow=True, startangle=45)\r\n    fig1.canvas.draw_idle()\r\n\r\n\r\n\r\ndef OpenPricefilterframe():\r\n    global pricefilterframe\r\n    pricefilterframe = Toplevel(settingswindow, bg=\"#042430\")\r\n    pricefilterframe.geometry('300x140')# width x height\r\n    pricefilterframe.resizable(False, False)\r\n    pricefilterframe.iconbitmap(\"steam_icon.ico\")\r\n    pricefilterframe.title(\"filter by price\")\r\n    labelfrom = Label(master=pricefilterframe, text=\"from\", bg=\"#042430\", fg=\"white\")\r\n    labelfrom.grid(row=0, padx=60)\r\n    global pricefrom\r\n    pricefrom = Entry(master=pricefilterframe, bg=\"#0B3545\", fg=\"white\", insertbackground=\"white\", insertwidth=1)\r\n    pricefrom.grid(row=1, padx=60)\r\n    labelto = Label(master=pricefilterframe, text=\"to\", bg=\"#042430\", fg=\"white\")\r\n    labelto.grid(row=2, padx=60)\r\n    global priceto\r\n    priceto = Entry(master=pricefilterframe, bg=\"#0B3545\", fg=\"white\", insertbackground=\"white\", insertwidth=1)\r\n    priceto.grid(row=3, padx=60)\r\n    getpricefilter_button = Button(master=pricefilterframe, text=\"filter\", command=filterByPrice, bg=\"#0B3545\", fg=\"white\",\r\n                                   borderwidth=0)\r\n    getpricefilter_button.grid(row=4, pady=5, padx=60)\r\n\r\n\r\ndef fillList(fill_with):\r\n    try:\r\n        games = collectInfo()\r\n        list = games[fill_with].to_list()\r\n    except:\r\n        list = []\r\n        for game in json_to_dict(data_location):\r\n            list.append(game[fill_with])\r\n    return list\r\n\r\n\r\ndef getDetails(i):\r\n    selected = gameslist.get(gameslist.curselection()) # get the current selection in the listbox\r\n    details.config(state=NORMAL) # set state to normal so that changes can be made to the textbox\r\n    details.delete('1.0', END) #clear whatevers currently in the textbox\r\n\r\n    try:\r\n        data = collectInfo()\r\n        row = data[data['name'] == selected]\r\n        appid_info = row[\"appid\"]\r\n        appid = int(appid_info[0])\r\n        #Als de API het niet doet gaat hij om een of andere reden niet naar de except. Vandaar dit\r\n        try:\r\n            game = collectInfo(gameID = appid)\r\n        except:\r\n            pass\r\n\r\n        details.insert(END, f'{game[\"name\"]}\\n'  # insert all the details into the textbox\r\n                            f'_____________________________\\n'  # this ones just for looks\r\n                            f'Developer: {game[\"developer\"]}\\n'\r\n                            f'Price: ${format((float(game[\"price\"]) / 100), \".2f\")}\\n'\r\n                            f'Positive ratings: {game[\"positive\"]}\\n'\r\n                            f'Negative ratings: {game[\"negative\"]}\\n'\r\n                            f'Average playtime: {game[\"average_forever\"]} minutes\\n'\r\n                            f'Owners: {game[\"owners\"]} copies\\n'\r\n                            f'Languages: {game[\"languages\"]}\\n'\r\n                            f'Genres: {game[\"genre\"]}')\r\n        showgraph(game['appid'])\r\n    #Zodat de games weergegeven kunnen worden als de API niet werkt\r\n    except:\r\n        sorted_dict = sorted(json_to_dict(data_location), key=lambda k: k['name'])  # sort list of dicts\r\n\r\n        start = 0  # yes im going to try and implement a  binary search and im in hell\r\n        end = len(sorted_dict) - 1\r\n        while True:\r\n            middle = (start + end) // 2\r\n            game = sorted_dict[middle]\r\n            if game[\"name\"] > selected:\r\n                end = middle - 1\r\n            elif game[\"name\"] < selected:\r\n                start = middle + 1\r\n            else:\r\n                details.insert(END, f'_____________________________\\n'  # this ones just for looks\r\n                                    f'Recent info can\\'t be collected. You may look at outdated stats.\\n'\r\n                                    f'_____________________________\\n'  # this ones just for looks\r\n                                    f'{game[\"name\"]}\\n'\r\n                                    f'_____________________________\\n'  # this ones just for looks\r\n                                    f'Release date: {game[\"release_date\"]}\\n'\r\n                                    f'Developer: {game[\"developer\"]}\\n'\r\n                                    f'Price: ${format((game[\"price\"] / 100), \".2f\")}\\n'\r\n                                    f'Genres: {game[\"genres\"]}\\n'\r\n                                    f'Platforms: {game[\"platforms\"]}\\n'\r\n                                    f'Positive ratings: {game[\"positive_ratings\"]}\\n'\r\n                                    f'Negative ratings: {game[\"negative_ratings\"]}\\n'\r\n                                    f'Average playtime: {game[\"average_playtime\"]} hours\\n'\r\n                                    f'Owners: {game[\"owners\"]} copies\\n')\r\n                break\r\n        showgraph(0, [game[\"positive_ratings\"], game[\"negative_ratings\"]])\r\n    details.config(state=DISABLED)  # set it back to disabled to the user cant write 'penis' in the textbox\r\n\r\n\r\n\r\n    return None  #python gets mad at me if i dont return anything and i dont know why\r\n    # place i got the code from: https://stackoverflow.com/questions/34327244/binary-search-through-strings\r\n\r\n\r\ndef filterByGenre(current_genre):\r\n    gameslist.delete(0, END)\r\n\r\n    games = collectInfo(genre = current_genre)\r\n    print(games)\r\n\r\n    for name in games[\"name\"]:\r\n        gameslist.insert(END, name)\r\n\r\n\r\n\r\n\r\n\r\ndef filterBy(i):  # same as search but like. different\r\n    global current_filter\r\n    selection = current_filter.get()\r\n    # pricefilterframe.grid_forget()\r\n    genre_optionmenu.grid_forget()\r\n\r\n    if selection == \"no filter\":\r\n        listInsert(fillList('name'))\r\n        global games_from_list\r\n        games_from_list = gameslist.get(0, \"end\")\r\n\r\n    elif selection == \"price\":\r\n        # pricefilterframe.grid(row= 0, column=2)\r\n        OpenPricefilterframe()\r\n\r\n\r\n    elif selection == \"genre\":\r\n        genre_optionmenu.grid(row=0, column=2)\r\n\r\n\r\ndef filterByPrice(**kwargs):\r\n    try:\r\n        float(pricefrom.get())\r\n        float(priceto.get())\r\n    except ValueError:\r\n        price_valueError = messagebox.showinfo(title=\"value Error\", message=\"please insert a price\")\r\n        return None\r\n    sorting = kwargs.get('sort', None)\r\n\r\n    if sorting:\r\n        current_sort_label.config(text=f\"sorted by: price\")\r\n        min_price = -1\r\n        max_price = 10 ** 999 #Lijkt me sterk dat er een spel ooit zo duur zou zijn\r\n        current_sort_label.config(text=f\"sorted by: price\")\r\n    else:\r\n        min_price = float(pricefrom.get())\r\n        max_price = float(priceto.get())\r\n        current_sort_label.config(text=f\"filterd by: price ${format(min_price, '.2f')} - ${format(max_price, '.2f')}\")\r\n\r\n    gameslist.delete(0, END)\r\n\r\n    all_games = collectInfo()\r\n\r\n    games_names = all_games[\"name\"]\r\n    games_prices = all_games[\"price\"]\r\n\r\n    counter = 0\r\n    games = []\r\n    for i in games_prices:\r\n        games_price = float(i) / 100 #Van centen naar euro's\r\n        if min_price <= games_price <= max_price:\r\n            games.append([games_price, games_names[counter]])\r\n        counter += 1\r\n\r\n    for game in sort(games):\r\n        gameslist.insert(\"end\", game[1])\r\n\r\n    global games_from_list\r\n    games_from_list = gameslist.get(0, \"end\")\r\n\r\n\r\ndef search(a):\r\n    query = searchbar.get() #get contents of searchbar\r\n\r\n    gameslist.delete(0, END)  # clear listbox\r\n    if query == \"\":#if searchbar is empty, insert entire list\r\n        listInsert(games_from_list)\r\n        return\r\n\r\n    if case_sensitive == True:\r\n        for game in games_from_list:\r\n            if query in game:\r\n                gameslist.insert(\"end\", game)\r\n    else:\r\n        for game in games_from_list:\r\n            no_case = game.lower()\r\n            if query.lower() in no_case:\r\n                gameslist.insert(\"end\", game)\r\n\r\n                  #     for loop in binary search\r\n\r\n\r\ndef caseSensitive():\r\n    global case_sensitive\r\n    if case_sensitive == True:\r\n        case_sensitive = False\r\n\r\n    elif case_sensitive == False:\r\n        case_sensitive = True\r\n\r\n\r\ndef sortby(i):\r\n    global current_sort\r\n    selection = current_sort.get()\r\n    if selection == \"name\":\r\n        listInsert(sort(fillList('name')))\r\n        current_sort_label.config(text=f\"sorted by: name\")\r\n    elif selection == \"price\":\r\n        filterByPrice(sort = True)\r\n\r\n\r\nstate = 0\r\ndef neopixelChange(i):\r\n    global state\r\n    rem = Pyro5.api.Proxy(con)\r\n    selection = current_neopxl.get()\r\n    if selection == \"off\":\r\n        try:\r\n            if state != 0:\r\n                if state == 1:\r\n                    rem.recieve_smooth(False)\r\n                else:\r\n                    rem.recieve_flash(False)\r\n            rem.change_neo([[0, 0, 0]])\r\n            state = 0\r\n            changeButtonColor(None)\r\n        except:\r\n            time.sleep(2)\r\n\r\n    elif selection == \"white\":\r\n        try:\r\n            if state != 0:\r\n                if state == 1:\r\n                    rem.recieve_smooth(False)\r\n                else:\r\n                    rem.recieve_flash(False)\r\n            rem.change_neo([[255, 255, 255]])\r\n            state = 0\r\n            changeButtonColor(None)\r\n        except:\r\n            time.sleep(2)\r\n\r\n    elif selection == \"smooth\":\r\n        try:\r\n            if state != 0:\r\n                if state == 1:\r\n                    rem.recieve_smooth(False)\r\n                else:\r\n                    rem.recieve_flash(False)\r\n            rem.recieve_smooth(True)\r\n            state = 1\r\n            changeButtonColor(None)\r\n        except:\r\n            time.sleep(2)\r\n\r\n    elif selection == \"flash\":\r\n        try:\r\n            if state != 0:\r\n                if state == 1:\r\n                    rem.recieve_smooth(False)\r\n                else:\r\n                    rem.recieve_flash(False)\r\n            rem.recieve_flash(True)\r\n            state = 2\r\n            changeButtonColor(None)\r\n        except:\r\n            time.sleep(2)\r\n\r\n    elif selection == \"pick color\":\r\n        color = (askcolor((0, 0, 0), root))[0]\r\n        try:\r\n            if state != 0:\r\n                if state == 1:\r\n                    rem.recieve_smooth(False)\r\n                else:\r\n                    rem.recieve_flash(False)\r\n            rem.change_neo([color])\r\n            changeButtonColor(color)\r\n            state = 0\r\n        except:\r\n            time.sleep(2)\r\n\r\n\r\ndef send_wave():\r\n    rem = Pyro5.api.Proxy(con)\r\n    TI_wavebutton.config(state=DISABLED)\r\n    TI_wavebutton.update()\r\n    try:\r\n        rem.recieve_wave()\r\n        time.sleep(4)\r\n    except:\r\n        time.sleep(2)\r\n    finally:\r\n        TI_wavebutton.config(state=\"normal\")\r\n        TI_wavebutton.update()\r\n\r\n\r\ndef thread_send_wave():\r\n    threading.Thread(target=send_wave, daemon=True).start()\r\n\r\n\r\ndef send_beep():\r\n    rem = Pyro5.api.Proxy(con)\r\n    TI_soundbutton.config(state=DISABLED)\r\n    try:\r\n        for i in range(0, 5):\r\n           rem.send_beep()\r\n           time.sleep(1.3)\r\n    except:\r\n        time.sleep(2)\r\n    finally:\r\n        TI_soundbutton.config(state=NORMAL)\r\n\r\n\r\ndef thread_send_beep():\r\n    threading.Thread(target=send_beep, daemon=True).start()\r\n\r\n\r\ndef onExit():\r\n    rem = Pyro5.api.Proxy(con)\r\n    root.destroy()\r\n    threading.Thread(target = rem.shutdown())\r\n    exit()\r\n\r\n\r\ndef fromRGB(rgb):\r\n    \"\"\"translates an rgb tuple of int to a tkinter friendly color code\r\n    \"\"\"\r\n    # bron: https://stackoverflow.com/a/51592104\r\n    return \"#%02x%02x%02x\" % rgb\r\n\r\n\r\ndef changeButtonColor(color):\r\n      # De rgb kleuren\r\n    if color is None:\r\n        TI_neopixel_options.config(bg=\"#042430\", fg=\"white\",\r\n                                   activebackground='#092F3E',\r\n                                   activeforeground='white',\r\n                                   borderwidth=0,\r\n                                   highlightthickness=0)\r\n    else:\r\n        TI_neopixel_options.config(bg=f\"{fromRGB(color)}\", activebackground=f\"{fromRGB(color)}\")\r\n        print(max(color))\r\n        if max(color) >= 200:\r\n            TI_neopixel_options.config(fg='black',activeforeground='black')\r\n        else:\r\n            TI_neopixel_options.config(fg='white', activeforeground='white')\r\n\r\n\r\n    #-- placing wigdets\r\nroot = tix.Tk()\r\nroot.config(bg=\"#042430\")\r\nroot.iconbitmap(\"steam_icon.ico\") #how the fuck does this slow down the entire app???\r\nroot.title(\"steam application\")\r\nroot.resizable(False, False)\r\nroot.protocol(\"WM_DELETE_WINDOW\", lambda: onExit())\r\ntheme = ttk.Style(root)\r\ntooltip_balloon = tix.Balloon(root, bg=\"#2B526F\")\r\n\r\n\r\n\r\nrightframe = Frame(master=root, width=768, height=576,bg=\"#042430\")\r\nrightframe.grid(row=0,column=0, padx=10, pady=10)\r\n\r\n# --sort window\r\nsettingswindow = Frame(master=rightframe, bg=\"#042430\")\r\nsettingswindow.pack(side=TOP, pady=10)\r\n\r\n\r\n# --wigdets in window\r\n\r\nsorting_options = [\"sort by\", \"name\", \"price\", \"date\"]\r\nglobal current_sort\r\ncurrent_sort = StringVar()\r\ncurrent_sort.set(sorting_options[0])\r\nglobal sort_optionmenu\r\nsort_optionmenu = OptionMenu(settingswindow, current_sort, *sorting_options, command=sortby)\r\nsort_optionmenu.config(bg=\"#0B3545\", fg=\"white\",\r\n                       activebackground='#092F3E',\r\n                       activeforeground='white',\r\n                       borderwidth=0,\r\n                       highlightthickness=0)\r\nsort_optionmenu[\"menu\"].config(bg=\"#042430\", fg=\"white\", activebackground=\"#0b3a4d\")\r\nsort_optionmenu.grid(row=0, pady=5, padx=5)\r\n\r\nfilter_options = ('no filter', 'genre', 'price')\r\nglobal current_filter\r\ncurrent_filter = StringVar()\r\ncurrent_filter.set(filter_options[0])\r\nfilter_optionmenu = OptionMenu(settingswindow, current_filter, *filter_options, command=filterBy)  # filteroptions\r\nfilter_optionmenu.config(bg=\"#0B3545\", fg=\"white\",\r\n                         activebackground='#092F3E',\r\n                         activeforeground='white',\r\n                         borderwidth=0,\r\n                         highlightthickness=0)\r\nfilter_optionmenu[\"menu\"].config(bg=\"#042430\", fg=\"white\", activebackground=\"#0b3a4d\")\r\nfilter_optionmenu.grid(row=0, column=1, pady=5, padx=5)\r\n\r\ngenrefilter_options = [\"pick a genre\", \"Action\", \"Adventure\", \"Indie\", \"RPG\", \"Early Access\"] #UIZOEKEN BESCHIKBARE GENRES\r\nglobal current_genre\r\ncurrent_genre = StringVar()\r\ncurrent_genre.set(genrefilter_options[0])\r\nglobal genre_optionmenu\r\ngenre_optionmenu = OptionMenu(settingswindow, current_genre, *genrefilter_options, )#command=filterByGenre\r\ngenre_optionmenu.config(bg=\"#0B3545\", fg=\"white\",\r\n                        activebackground='#092F3E',\r\n                        activeforeground='white',\r\n                        borderwidth=0,\r\n                        highlightthickness=0)\r\ngenre_optionmenu[\"menu\"].config(bg=\"#0B3545\", fg=\"white\", activebackground=\"#0b3a4d\")\r\n\r\n\r\n\r\n\r\n# listbox\r\nlistframe = Frame(master=rightframe, bg=\"#0B3545\")\r\nsearchbarframe= Frame(master=rightframe,bg=\"#042430\")\r\nsearchbar = Entry(master=searchbarframe)\r\nsearchbar.config(bg=\"#133d4d\", fg=\"white\", insertbackground=\"white\", insertwidth=1) #look i just *do not* like the way the cursors in tkinter looks\r\nsearchbar.bind(\"<Return>\", search)\r\nsearch_label = Label(master=searchbarframe, text=\"search:\", fg=\"white\", bg=\"#042430\")\r\nscrollbar = Scrollbar(listframe, orient=\"vertical\")\r\ngameslist = Listbox(master=listframe, yscrollcommand=scrollbar.set, background=\"#042430\", fg=\"white\",selectbackground=\"#133d4d\",highlightcolor=\"#133d4d\", width=50, activestyle=\"none\")\r\nscrollbar.config(command=gameslist.yview)\r\ngameslist.bind(\"<<ListboxSelect>>\", getDetails)\r\ngameslist.bind(\"<B1-Leave>\", lambda event: \"break\")\r\ncase_button = Checkbutton(master=searchbarframe, command=caseSensitive, text=f\"Case sensitve\", bg=\"#0B3545\", fg=\"white\",\r\n                          selectcolor=\"#042430\", highlightbackground=\"#0B3545\", indicatoron=0, overrelief=\"sunken\")\r\ntooltip_balloon.bind_widget(case_button, balloonmsg='if on, search will be case sensitive.')\r\nsearchbarframe.pack(side=\"top\")\r\nsearch_label.pack(side=\"left\")\r\ncase_button.pack(side=\"right\", pady=5, padx=5)\r\nsearchbar.pack(side=\"right\")\r\n\r\nlistframe.pack(side=\"top\")\r\ngameslist.pack(side=\"left\", expand=True, fill=\"both\")\r\nscrollbar.pack(side=\"right\", fill=\"y\")\r\ncurrent_sort_label = Label(master=rightframe, text=f\"sorted by: not sorted\", fg=\"white\", bg=\"#042430\")\r\ncurrent_sort_label.pack(side=\"top\", fill=\"x\")\r\n\r\ndetailsframe = Frame(master=rightframe, bg=\"#0B3545\", width=300, height=200)\r\ndetailsframe.pack(side='bottom')\r\ndetailsframe.pack_propagate(False)\r\n# scrollbar = Scrollbar(detailsframe, orient=\"vertical\")\r\nglobal details\r\ndetails = Text(master=detailsframe, bg=\"#0B3545\", fg=\"white\", wrap=WORD)\r\n# details.insert(END, \"“According to all known laws of aviation, there is no way that a bee should be able to fly. Its wings are too small to get its fat little body off the ground. The bee, of course, flies anyways. Because bees don't care what humans think is impossible.”\")\r\ndetails.config(state=DISABLED)\r\n# scrollbar.config(command=details.yview)\r\n# scrollbar.pack(side=\"right\", fill=\"y\")\r\ndetails.pack(pady=10)\r\n\r\n#--leftframe\r\nleftframe = Frame(master=root)\r\nleftframe.grid(row=0,column=1, padx=10, pady=10)\r\n\r\n\r\nleftframe_notebook = ttk.Notebook(leftframe)\r\n# leftframe_notebook.config(background=\"#042430\")\r\nntbk_frame1 = ttk.Frame(leftframe_notebook)\r\nrpi_frame = ttk.Frame(leftframe_notebook)\r\nleftframe_notebook.add(ntbk_frame1, text='Ratings')\r\nleftframe_notebook.add(rpi_frame, text='Raspberry PI')\r\n\r\n#rpi_frame\r\nrpilabel = Label(master=rpi_frame,text=\"raspberry pi functions\", fg=\"white\", bg=\"#0B3545\")\r\nrpilabel.grid(row=0, padx=10, pady=10)\r\n\r\nwave_img = PhotoImage(data=\"\")\r\nbuzzer_img =  PhotoImage(data=\"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\")\r\nTI_wavebutton = Button(master=rpi_frame, text=\"wave\", image=wave_img, command=thread_send_wave, bg=\"#042430\",fg=\"white\", borderwidth=0)\r\ntooltip_balloon.bind_widget(TI_wavebutton, balloonmsg='wave to your friend with the servo')\r\nTI_wavebutton.grid(row= 1, padx=10, pady=10)\r\nTI_soundbutton = Button(master=rpi_frame, text=\"send signal\", image=buzzer_img,command=thread_send_beep, bg=\"#042430\",fg=\"white\",borderwidth=0)\r\ntooltip_balloon.bind_widget(TI_soundbutton, balloonmsg='send a sound signal to your friend')\r\nTI_soundbutton.grid(row=1, column=1)\r\n#TI_togglesensor = Button(master=rpi_frame, text=\"afstandsensor display:neopixel\", bg=\"#042430\",fg=\"white\", command=afstandsensordisplay)\r\nsensordisplay = \"neopixel\"\r\n#TI_togglesensor.grid(row=1, column=2,padx=10)\r\nneopixel_label = Label(master=rpi_frame,text=\"neopixel functions\", fg=\"white\", bg=\"#0B3545\")\r\nneopixel_label.grid(row=3)\r\nneopixel_options = ('off', 'white', 'smooth', 'flash', 'pick color')\r\ncurrent_neopxl = StringVar()\r\ncurrent_neopxl.set(neopixel_options[0])\r\nTI_neopixel_options = OptionMenu(rpi_frame, current_neopxl, *neopixel_options, command=neopixelChange)\r\nTI_neopixel_options[\"menu\"].config(bg=\"#042430\", fg=\"white\", activebackground=\"#0b3a4d\")\r\n\r\nTI_neopixel_options.config(bg=\"#042430\",fg=\"white\",\r\n                           activebackground='#092F3E',\r\n                           activeforeground='white',\r\n                           borderwidth=0,\r\n                           highlightthickness = 0) #, image=neopixel_image\r\ntooltip_balloon.bind_widget(TI_neopixel_options, balloonmsg=\"colors and effects with your ledstrip\")\r\n\r\nTI_neopixel_options.grid(row=4)\r\n#TI_slider = Scale(master=rpi_frame, from_=0, to=64, tickinterval=64,background=\"#0B3545\", fg='white', troughcolor='#3D6D7F', activebackground='#09192A', highlightthickness=0)\r\n#TI_slider.grid(row=4, column=1,padx=10, pady=10)\r\n\r\n\r\n#Notebook Style\r\nnoteStyler = ttk.Style()\r\n\r\n# Import the Notebook.tab element from the default theme\r\nnoteStyler.element_create('Plain.Notebook.tab', \"from\", 'default')\r\n# Redefine the TNotebook Tab layout to use the new element\r\nnoteStyler.layout(\"TNotebook.Tab\",\r\n    [('Plain.Notebook.tab', {'children':\r\n        [('Notebook.padding', {'side': 'top', 'children':\r\n            # [('Notebook.focus', {'side': 'top', 'children':\r\n                [('Notebook.label', {'side': 'top', 'sticky': ''})],\r\n            # 'sticky': 'nswe'})],\r\n        'sticky': 'nswe'})],\r\n    'sticky': 'nswe'})])\r\n\r\nnoteStyler.configure(\"TNotebook\", background=\"#042430\")\r\nnoteStyler.configure(\"TNotebook.Tab\", background=\"#0B3545\", foreground=\"white\", lightcolor=\"#0B3545\")\r\nnoteStyler.configure(\"TFrame\", background=\"#0B3545\", foreground=\"white\")\r\n# bron: https://stackoverflow.com/questions/22389198/ttk-styling-tnotebook-tab-background-and-borderwidth-not-working\r\n\r\nleftframe_notebook.grid()\r\n\r\n#--menu\r\nmenubar = Menu(root)\r\nhelpmenu = Menu(menubar, tearoff=0)\r\nmenubar.add_cascade(label=\"Help\", menu=helpmenu)\r\nhelpmenu.add_command(label=\"Readme\", command=openReadme)\r\nroot.config(menu=menubar)\r\n\r\n\r\n#Laat de diagram zien\r\nfig1, ax1 = plt.subplots(figsize=(4, 4))\r\nax1.pie([1, 0], explode=[0.1, 0], labels=[\"Positive\", \"Negative\"], autopct='%1.0f%%', shadow=True, startangle=45)\r\nax1.axis('equal')\r\n\r\ncanvas = FigureCanvasTkAgg(fig1, master=ntbk_frame1)\r\ncanvas.draw()\r\n\r\ntoolbar = NavigationToolbar2Tk(canvas, ntbk_frame1)\r\ntoolbar.update()\r\n\r\ncanvas.get_tk_widget().pack()\r\n\r\n\r\ncaseSensitive()\r\nlistInsert(fillList('name'))\r\ngames_from_list = gameslist.get(0, \"end\")\r\nroot.mainloop()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Dashboard.py b/Dashboard.py
--- a/Dashboard.py	(revision 4164450b11194c3c8cb10d1e9ef9bcb6d3a49534)
+++ b/Dashboard.py	(date 1610801554519)
@@ -164,10 +164,8 @@
     genre = kwargs.get('genre', None)
 
     if genre != None:
-        print("soem")
         url = "https://steamspy.com/api.php?request=genre&genre=" + genre.replace(" ", "+")
     elif game == "all":
-        print("all")
         url = "https://steamspy.com/api.php?request=all"
     else:
         url = "https://steamspy.com/api.php?request=appdetails&appid=" + str(game)
@@ -260,33 +258,35 @@
         showgraph(game['appid'])
     #Zodat de games weergegeven kunnen worden als de API niet werkt
     except:
-        sorted_dict = sorted(json_to_dict(data_location), key=lambda k: k['name'])  # sort list of dicts
+        dict = json_to_dict(data_location)  # sort list of dicts
 
-        start = 0  # yes im going to try and implement a  binary search and im in hell
-        end = len(sorted_dict) - 1
-        while True:
-            middle = (start + end) // 2
-            game = sorted_dict[middle]
-            if game["name"] > selected:
-                end = middle - 1
-            elif game["name"] < selected:
-                start = middle + 1
-            else:
-                details.insert(END, f'_____________________________\n'  # this ones just for looks
-                                    f'Recent info can\'t be collected. You may look at outdated stats.\n'
-                                    f'_____________________________\n'  # this ones just for looks
-                                    f'{game["name"]}\n'
-                                    f'_____________________________\n'  # this ones just for looks
-                                    f'Release date: {game["release_date"]}\n'
-                                    f'Developer: {game["developer"]}\n'
-                                    f'Price: ${format((game["price"] / 100), ".2f")}\n'
-                                    f'Genres: {game["genres"]}\n'
-                                    f'Platforms: {game["platforms"]}\n'
-                                    f'Positive ratings: {game["positive_ratings"]}\n'
-                                    f'Negative ratings: {game["negative_ratings"]}\n'
-                                    f'Average playtime: {game["average_playtime"]} hours\n'
-                                    f'Owners: {game["owners"]} copies\n')
-                break
+        game = dict.get(selected)
+#
+        #start = 0  # yes im going to try and implement a  binary search and im in hell
+        #end = len(sorted_dict) - 1
+        #while True:
+        #    middle = (start + end) // 2
+        #    game = sorted_dict[middle]
+        #    if game["name"] > selected:
+        #        end = middle - 1
+        #    elif game["name"] < selected:
+        #        start = middle + 1
+        #    else:
+        details.insert(END, f'_____________________________\n'  # this ones just for looks
+                            f'Recent info can\'t be collected. You may look at outdated stats.\n'
+                            f'_____________________________\n'  # this ones just for looks
+                            f'{game["name"]}\n'
+                            f'_____________________________\n'  # this ones just for looks
+                            f'Release date: {game["release_date"]}\n'
+                            f'Developer: {game["developer"]}\n'
+                            f'Price: ${format((game["price"] / 100), ".2f")}\n'
+                            f'Genres: {game["genres"]}\n'
+                            f'Platforms: {game["platforms"]}\n'
+                            f'Positive ratings: {game["positive_ratings"]}\n'
+                            f'Negative ratings: {game["negative_ratings"]}\n'
+                            f'Average playtime: {game["average_playtime"]} hours\n'
+                            f'Owners: {game["owners"]} copies\n')
+
         showgraph(0, [game["positive_ratings"], game["negative_ratings"]])
     details.config(state=DISABLED)  # set it back to disabled to the user cant write 'penis' in the textbox
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7aa53e31-68b4-4456-8ba9-91ec7b33b431\" name=\"Default Changelist\" comment=\"Minor changes and bugfixes\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Dashboard.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Dashboard.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"DjangoConsoleOptions\" custom-start-script=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\">\r\n    <option name=\"myCustomStartScript\" value=\"import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <hideBySeverity>\r\n      <option value=\"15\" />\r\n      <option value=\"200\" />\r\n    </hideBySeverity>\r\n    <option name=\"showPreview\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1m1eDomavgFang3x9u8MaUjgEz1\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.highlight.mappings\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.highlight.symlinks\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.show.date\" value=\"false\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.show.permissions\" value=\"false\" />\r\n    <property name=\"WebServerToolWindowPanel.toolwindow.show.size\" value=\"false\" />\r\n    <property name=\"credentialsType com.jetbrains.python.remote.PyCreateRemoteInterpreterDialog$PyCreateRemoteSdkForm\" value=\"Web Deployment\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/TI/test/Walk.py\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"web.server\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\\TI\\test\" />\r\n      <recent name=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\" />\r\n      <recent name=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\\AI\\old\" />\r\n      <recent name=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\\AI\" />\r\n      <recent name=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\\final\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\\TI\\test\" />\r\n      <recent name=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\\AI\" />\r\n      <recent name=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\\final\" />\r\n      <recent name=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\\test\\local\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.GUI\">\r\n    <configuration name=\"Client\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"HUProjectB\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"sftp://pi@192.168.192.64:22/usr/bin/python3\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Client PI.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"GUI-AI\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"HUProjectB\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\davev\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Dashboard - AI.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"GUI\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"HUProjectB\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\davev\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Dashboard.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"NEO - WALK\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"HUProjectB\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"sftp://pi@husteam.duckdns.org:22/usr/bin/python3\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/TI/test\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/TI/test/Walk.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Server\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"HUProjectB\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"sftp://pi@husteam.duckdns.org:22/usr/bin/python3\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Server PI.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"HUProjectB\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"HUProjectB\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\davev\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/AI\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\davev\\Documents\\GitHub\\HUProjectB\\AI\\test.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"test2\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"HUProjectB\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\davev\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/AI\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/AI/test2.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"test3\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"HUProjectB\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"C:\\Users\\davev\\venv\\Scripts\\python.exe\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/AI\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/AI/test3.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Python.GUI\" />\r\n      <item itemvalue=\"Python.GUI-AI\" />\r\n      <item itemvalue=\"Python.Server\" />\r\n      <item itemvalue=\"Python.Client\" />\r\n      <item itemvalue=\"Python.test\" />\r\n      <item itemvalue=\"Python.test2\" />\r\n      <item itemvalue=\"Python.test3\" />\r\n      <item itemvalue=\"Python.NEO - WALK\" />\r\n    </list>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7aa53e31-68b4-4456-8ba9-91ec7b33b431\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1608665407323</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1608665407323</updated>\r\n      <workItem from=\"1608665409702\" duration=\"4340000\" />\r\n      <workItem from=\"1608725870273\" duration=\"16678000\" />\r\n      <workItem from=\"1608827239261\" duration=\"2479000\" />\r\n      <workItem from=\"1608897644437\" duration=\"240000\" />\r\n      <workItem from=\"1608898008975\" duration=\"64000\" />\r\n      <workItem from=\"1609073510158\" duration=\"4082000\" />\r\n      <workItem from=\"1609145699287\" duration=\"11648000\" />\r\n      <workItem from=\"1609169182291\" duration=\"14078000\" />\r\n      <workItem from=\"1609253659167\" duration=\"10143000\" />\r\n      <workItem from=\"1609331483948\" duration=\"11614000\" />\r\n      <workItem from=\"1609358496712\" duration=\"3428000\" />\r\n      <workItem from=\"1609415662556\" duration=\"8446000\" />\r\n      <workItem from=\"1609526560315\" duration=\"4177000\" />\r\n      <workItem from=\"1609831922520\" duration=\"31000\" />\r\n      <workItem from=\"1609832007620\" duration=\"19220000\" />\r\n      <workItem from=\"1609867256675\" duration=\"7763000\" />\r\n      <workItem from=\"1609919852342\" duration=\"14551000\" />\r\n      <workItem from=\"1610008231859\" duration=\"25621000\" />\r\n      <workItem from=\"1610092702373\" duration=\"23274000\" />\r\n      <workItem from=\"1610196920555\" duration=\"1268000\" />\r\n      <workItem from=\"1610301187289\" duration=\"7938000\" />\r\n      <workItem from=\"1610353875292\" duration=\"11660000\" />\r\n      <workItem from=\"1610446396119\" duration=\"14102000\" />\r\n      <workItem from=\"1610529022364\" duration=\"16674000\" />\r\n      <workItem from=\"1610553422641\" duration=\"3889000\" />\r\n      <workItem from=\"1610618703686\" duration=\"9573000\" />\r\n      <workItem from=\"1610698021456\" duration=\"12539000\" />\r\n      <workItem from=\"1610732771893\" duration=\"1287000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\".\">\r\n      <created>1609342389310</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609342389310</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\".\">\r\n      <created>1609343884535</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609343884535</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\".\">\r\n      <created>1609435803422</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609435803422</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Fixed servo movement speed\">\r\n      <created>1609833419113</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609833419113</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"Minor changes and bugfixes\">\r\n      <created>1609833449590</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609833449590</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"Fixed servo movement speed\">\r\n      <created>1609833487172</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609833487172</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"Removed unnecessary elements\">\r\n      <created>1609838510771</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609838510771</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"Added shutdown function when closing GUI\">\r\n      <created>1609853437943</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609853437943</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"Icons\">\r\n      <created>1609853455593</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609853455593</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"Minor bugfixes\">\r\n      <created>1609857215848</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609857215848</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"Minor changes and bugfixes\">\r\n      <created>1609858189238</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609858189238</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"Minor changes and bugfixes\">\r\n      <created>1609858807472</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609858807472</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"Minor changes and bugfixes\">\r\n      <created>1609870345992</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609870345992</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"Fixed bug which keeped latchregister-thread alive\">\r\n      <created>1609870411308</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1609870411308</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"Added smooth and flashy trasitioning optiens for the neopixel\">\r\n      <created>1610028602852</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610028602852</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00043\" summary=\"File for testing purposes\">\r\n      <created>1610028627706</created>\r\n      <option name=\"number\" value=\"00043\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610028627706</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00044\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610031046449</created>\r\n      <option name=\"number\" value=\"00044\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610031046449</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00045\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610031753804</created>\r\n      <option name=\"number\" value=\"00045\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610031753804</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00046\" summary=\"Changed language of the code\">\r\n      <created>1610034032140</created>\r\n      <option name=\"number\" value=\"00046\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610034032140</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00047\" summary=\"Added old AI functions\">\r\n      <created>1610035418247</created>\r\n      <option name=\"number\" value=\"00047\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610035418247</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00048\" summary=\"Added sorting function\">\r\n      <created>1610046016395</created>\r\n      <option name=\"number\" value=\"00048\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610046016395</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00049\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610048175762</created>\r\n      <option name=\"number\" value=\"00049\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610048175762</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00050\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610094660142</created>\r\n      <option name=\"number\" value=\"00050\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610094660142</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00051\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610114986218</created>\r\n      <option name=\"number\" value=\"00051\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00051\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610114986218</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00052\" summary=\"Added pie chart\">\r\n      <created>1610121042056</created>\r\n      <option name=\"number\" value=\"00052\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00052\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610121042057</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00053\" summary=\"Added Steam API\">\r\n      <created>1610133229367</created>\r\n      <option name=\"number\" value=\"00053\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00053\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610133229367</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00054\" summary=\"Made piediagram and gameinformation work\">\r\n      <created>1610309711301</created>\r\n      <option name=\"number\" value=\"00054\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00054\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610309711302</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00055\" summary=\"Made an offline mode for when the API does not work. Also fixed bug which caused to make duplicate piecharts when an game was selected.\">\r\n      <created>1610372392302</created>\r\n      <option name=\"number\" value=\"00055\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00055\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610372392302</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00056\" summary=\"Fixed search\">\r\n      <created>1610374839543</created>\r\n      <option name=\"number\" value=\"00056\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00056\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610374839543</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00057\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610375195006</created>\r\n      <option name=\"number\" value=\"00057\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00057\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610375195006</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00058\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610482399750</created>\r\n      <option name=\"number\" value=\"00058\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00058\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610482399750</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00059\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610482470995</created>\r\n      <option name=\"number\" value=\"00059\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00059\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610482470995</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00060\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610482535681</created>\r\n      <option name=\"number\" value=\"00060\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00060\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610482535681</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00061\" summary=\"Added filter function\">\r\n      <created>1610544535058</created>\r\n      <option name=\"number\" value=\"00061\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00061\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610544535058</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00062\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610550369592</created>\r\n      <option name=\"number\" value=\"00062\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00062\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610550369592</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00063\" summary=\"Added name and price sort and filter\">\r\n      <created>1610551736126</created>\r\n      <option name=\"number\" value=\"00063\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00063\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610551736126</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00064\" summary=\"Saved before merge\">\r\n      <created>1610552696777</created>\r\n      <option name=\"number\" value=\"00064\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00064\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610552696777</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00065\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610553055733</created>\r\n      <option name=\"number\" value=\"00065\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00065\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610553055733</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00066\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610630671945</created>\r\n      <option name=\"number\" value=\"00066\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00066\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610630671945</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00067\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610631531213</created>\r\n      <option name=\"number\" value=\"00067\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00067\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610631531214</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00068\" summary=\"Added genre menu for functional purposes\">\r\n      <created>1610635406055</created>\r\n      <option name=\"number\" value=\"00068\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00068\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610635406055</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00069\" summary=\"Added genre filter functionality\">\r\n      <created>1610639184559</created>\r\n      <option name=\"number\" value=\"00069\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00069\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610639184560</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00070\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610640101339</created>\r\n      <option name=\"number\" value=\"00070\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00070\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610640101339</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00071\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610641196793</created>\r\n      <option name=\"number\" value=\"00071\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00071\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610641196793</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00072\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610702225243</created>\r\n      <option name=\"number\" value=\"00072\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00072\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610702225243</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00073\" summary=\"Added price sort and fixed price filter. Added a test for the neopixel and made some minor chages and bugfixes\">\r\n      <created>1610724966909</created>\r\n      <option name=\"number\" value=\"00073\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00073\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610724966909</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00074\" summary=\"Fixed filters and sorting systems\">\r\n      <created>1610727474989</created>\r\n      <option name=\"number\" value=\"00074\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00074\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610727474989</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00075\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610732129738</created>\r\n      <option name=\"number\" value=\"00075\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00075\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610732129739</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00076\" summary=\"Minor changes and bugfixes\">\r\n      <created>1610732558379</created>\r\n      <option name=\"number\" value=\"00076\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00076\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1610732558379</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"77\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\".\" />\r\n    <MESSAGE value=\"Fixed servo movement speed\" />\r\n    <MESSAGE value=\"Removed unnecessary elements\" />\r\n    <MESSAGE value=\"Added shutdown function when closing GUI\" />\r\n    <MESSAGE value=\"Icons\" />\r\n    <MESSAGE value=\"Minor bugfixes\" />\r\n    <MESSAGE value=\"Fixed bug which keeped latchregister-thread alive\" />\r\n    <MESSAGE value=\"Added smooth and flashy trasitioning optiens for the neopixel\" />\r\n    <MESSAGE value=\"File for testing purposes\" />\r\n    <MESSAGE value=\"Changed language of the code\" />\r\n    <MESSAGE value=\"Added old AI functions\" />\r\n    <MESSAGE value=\"Added sorting function\" />\r\n    <MESSAGE value=\"Added pie chart\" />\r\n    <MESSAGE value=\"Added Steam API\" />\r\n    <MESSAGE value=\"Made piediagram and gameinformation work\" />\r\n    <MESSAGE value=\"Made an offline mode for when the API does not work. Also fixed bug which caused to make duplicate piecharts when an game was selected.\" />\r\n    <MESSAGE value=\"Fixed search\" />\r\n    <MESSAGE value=\"Added filter function\" />\r\n    <MESSAGE value=\"Added name and price sort and filter\" />\r\n    <MESSAGE value=\"Saved before merge\" />\r\n    <MESSAGE value=\"Added genre menu for functional purposes\" />\r\n    <MESSAGE value=\"Added genre filter functionality\" />\r\n    <MESSAGE value=\"Added price sort and fixed price filter. Added a test for the neopixel and made some minor chages and bugfixes\" />\r\n    <MESSAGE value=\"Fixed filters and sorting systems\" />\r\n    <MESSAGE value=\"Minor changes and bugfixes\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Minor changes and bugfixes\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Meten.coverage\" NAME=\"Schuifregister Coverage Results\" MODIFIED=\"1608736330013\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/Schuifregister\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$SR04.coverage\" NAME=\"SR04 Coverage Results\" MODIFIED=\"1609164171828\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/SR04\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$NEOpixel___WT.coverage\" NAME=\"NEOpixel - WT Coverage Results\" MODIFIED=\"1609343056882\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/NEOpixel\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$teserdietest___locate_ns.coverage\" NAME=\"teserdietest - locate ns Coverage Results\" MODIFIED=\"1609158736216\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test/remote pi\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Client.coverage\" NAME=\"Client Coverage Results\" MODIFIED=\"1610701546480\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$GUI.coverage\" NAME=\"GUI Coverage Results\" MODIFIED=\"1610733753131\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Zwaaien___WT.coverage\" NAME=\"Zwaaien - WT Coverage Results\" MODIFIED=\"1609161300794\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/Servo\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Dashboard.coverage\" NAME=\"Dashboard Coverage Results\" MODIFIED=\"1610048099903\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Server_PI.coverage\" NAME=\"Server PI Coverage Results\" MODIFIED=\"1610030671094\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/final\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$TEST___Threading_double_daemon.coverage\" NAME=\"TEST - Threading double daemon Coverage Results\" MODIFIED=\"1609181675632\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test/local\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$print_test_pi2.coverage\" NAME=\"print test pi2 - client Coverage Results\" MODIFIED=\"1609077122319\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test/remote pi\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$geluidsignaal.coverage\" NAME=\"geluidsignaal Coverage Results\" MODIFIED=\"1609254416094\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/geluidsingaal\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$test.coverage\" NAME=\"test Coverage Results\" MODIFIED=\"1610543068565\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/AI\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$NS___pi1.coverage\" NAME=\"NS - pi1 Coverage Results\" MODIFIED=\"1609158757403\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test/remote pi\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$GUI_PC.coverage\" NAME=\"GUI PC Coverage Results\" MODIFIED=\"1610030672435\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/final\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$test3.coverage\" NAME=\"test3 Coverage Results\" MODIFIED=\"1610354967495\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/AI\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Server.coverage\" NAME=\"Server Coverage Results\" MODIFIED=\"1610723129745\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$NEOpixel.coverage\" NAME=\"NEOpixel Coverage Results\" MODIFIED=\"1608741358809\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/NEOpixel\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$NS___plop.coverage\" NAME=\"NS - plop Coverage Results\" MODIFIED=\"1609076313746\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test/remote pi\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$print_test_pi2___client.coverage\" NAME=\"print test pi2 - client Coverage Results\" MODIFIED=\"1609159966550\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test/remote pi\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Schuifregister___WT.coverage\" NAME=\"Schuifregister - WT Coverage Results\" MODIFIED=\"1609868842489\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/Schuifregister\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Client_PI.coverage\" NAME=\"Client PI Coverage Results\" MODIFIED=\"1610030578845\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/final\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$GUI_AI.coverage\" NAME=\"GUI-AI Coverage Results\" MODIFIED=\"1610628913599\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1610041068484\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/AI\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$NEO___WALK.coverage\" NAME=\"NEO - WALK Coverage Results\" MODIFIED=\"1610722491601\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/TI/test\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$geluidsingaal___WT.coverage\" NAME=\"geluidsingaal - WT Coverage Results\" MODIFIED=\"1608746919999\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/geluidsingaal\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$geluidsignaal___WT.coverage\" NAME=\"geluidsignaal - WT Coverage Results\" MODIFIED=\"1609160576210\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/geluidsingaal\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$NEO_test.coverage\" NAME=\"NEO test Coverage Results\" MODIFIED=\"1610373585847\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/TI/test/apa102\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$test2.coverage\" NAME=\"test2 Coverage Results\" MODIFIED=\"1610530169171\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/AI\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Zwaaien.coverage\" NAME=\"Zwaaien Coverage Results\" MODIFIED=\"1609160525235\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/parts/Servo\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Cleanup.coverage\" NAME=\"Cleanup Coverage Results\" MODIFIED=\"1608727730083\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$USER_HOME$/PycharmProjects/TI\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$TI_test_pi.coverage\" NAME=\"TI test pi Coverage Results\" MODIFIED=\"1609257462743\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$GPIO_Cleanup.coverage\" NAME=\"GPIO Cleanup Coverage Results\" MODIFIED=\"1609361869198\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$Server_PI_2___test.coverage\" NAME=\"Server PI 2 - test Coverage Results\" MODIFIED=\"1609342730144\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/final\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$print_test_pi1.coverage\" NAME=\"print test pi1 - host Coverage Results\" MODIFIED=\"1609077471431\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test/remote pi\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$TEST___Threading.coverage\" NAME=\"TEST - Threading Coverage Results\" MODIFIED=\"1608669753156\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test\" />\r\n    <SUITE FILE_PATH=\"coverage/HUProjectB$print_test_pi1___host.coverage\" NAME=\"print test pi1 - host Coverage Results\" MODIFIED=\"1609159934283\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/test/remote pi\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4164450b11194c3c8cb10d1e9ef9bcb6d3a49534)
+++ b/.idea/workspace.xml	(date 1610801469963)
@@ -331,14 +331,8 @@
       <workItem from="1610553422641" duration="3889000" />
       <workItem from="1610618703686" duration="9573000" />
       <workItem from="1610698021456" duration="12539000" />
-      <workItem from="1610732771893" duration="1287000" />
-    </task>
-    <task id="LOCAL-00028" summary=".">
-      <created>1609342389310</created>
-      <option name="number" value="00028" />
-      <option name="presentableId" value="LOCAL-00028" />
-      <option name="project" value="LOCAL" />
-      <updated>1609342389310</updated>
+      <workItem from="1610732771893" duration="3026000" />
+      <workItem from="1610800724792" duration="344000" />
     </task>
     <task id="LOCAL-00029" summary=".">
       <created>1609343884535</created>
@@ -676,7 +670,14 @@
       <option name="project" value="LOCAL" />
       <updated>1610732558379</updated>
     </task>
-    <option name="localTasksCounter" value="77" />
+    <task id="LOCAL-00077" summary="Minor changes and bugfixes">
+      <created>1610734167632</created>
+      <option name="number" value="00077" />
+      <option name="presentableId" value="LOCAL-00077" />
+      <option name="project" value="LOCAL" />
+      <updated>1610734167632</updated>
+    </task>
+    <option name="localTasksCounter" value="78" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -728,7 +729,7 @@
     <SUITE FILE_PATH="coverage/HUProjectB$NEOpixel___WT.coverage" NAME="NEOpixel - WT Coverage Results" MODIFIED="1609343056882" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/parts/NEOpixel" />
     <SUITE FILE_PATH="coverage/HUProjectB$teserdietest___locate_ns.coverage" NAME="teserdietest - locate ns Coverage Results" MODIFIED="1609158736216" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/test/remote pi" />
     <SUITE FILE_PATH="coverage/HUProjectB$Client.coverage" NAME="Client Coverage Results" MODIFIED="1610701546480" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/HUProjectB$GUI.coverage" NAME="GUI Coverage Results" MODIFIED="1610733753131" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/HUProjectB$GUI.coverage" NAME="GUI Coverage Results" MODIFIED="1610737995598" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/HUProjectB$Zwaaien___WT.coverage" NAME="Zwaaien - WT Coverage Results" MODIFIED="1609161300794" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/parts/Servo" />
     <SUITE FILE_PATH="coverage/HUProjectB$Dashboard.coverage" NAME="Dashboard Coverage Results" MODIFIED="1610048099903" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
     <SUITE FILE_PATH="coverage/HUProjectB$Server_PI.coverage" NAME="Server PI Coverage Results" MODIFIED="1610030671094" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/final" />
